[{"title":"css 矩阵和 tramsform 之间换算","url":"/yideng/2019/03/03/css-matrix/","content":"\n**在学数学时，同学们总在一起打趣：学这么多的函数运算有什么用，以后买菜总不能先列一个函数，算出该付多少钱吧。可谁知，在科技高速发展的时代，打趣的话也快要“实现”了。**\n**在 css3 中，退出了新属性——— matrix(矩阵)，这不正是大一时候学的线性代数吗（好在大一的时候还不是很皮，都认真听讲了）**\n\n### 矩阵计算\n\n**css3 中的 matrix 用来代替多个 transfrom 属性或者一些 transfrom 无法实现的效果，就来看一看 matrix 是怎么实现变换的吧。**\n\n**首先来看一下矩阵的参数：**\n``` js\ntransform: matrix(a,b,c,d,e,f);\n```\n\n**这6个参数提供了一个 3 * 3 的矩阵，而经过这个矩阵能够计算出变换前的 x，y 值与变换后的 x，y 值的关系。反应式如下：**\n\n![matrix](../../../../img/css-matrix/matrix.gif)\n\n**其中 x，y 为变化前的坐标，ax+cy+e 为变换后的 x'，bx+dy+f 表示变换后的 y'。**\n**举个例子，如果我们有一个矩形有 A(0, 0) B(200, 0) C(0, 100) D(200, 100) 四个点组成，经过矩阵转换后，我们希望得到如下变换：**\n\n![transfrom](../../../../img/css-matrix/transfrom.png)\n\n**在 css 中，坐标轴的零点都是左上角，x 轴和 y 轴的方向也与数学中的坐标轴有所不同。也就是我们需要得到的矩阵坐标为 A'(300, 100) B'(300, 300) C'(400, 100) D'(400, 300)，那么就可以根据公式 ax+cy+e=x'，bx+dy+f=y' 算出 a,b,c,d,e,f 各为多少。**\n\n``` js\n// 将 A(0, 0) 和 A'(300, 100) 两点带入 ax+cy+e=x' bx+dy+f=y'\na * 0 + c * 0 + e = 300;\nb * 0 + d * 0 + f = 100;\n\ne = 300;\nf = 100;\n\n// 以此类推，将四个点全部带入计算得出 a,b,c,d,e,f 四个值\n// 此例中为 \ntransform: matrix(0, 1, 1, 0, 300, 100);\n```\n\n**最终矩阵变换的效果图如下**\n\n<iframe src=\"https://howgraceu.github.io/demo/matrix/\" style=\"margin-left: -2em; width: 100%; height: 225px;\"><iframe>\n\n### matrix 与 transfrom 各个属性的转换。\n\n**transfrom 的各个属性能够与 matrix 相互转换。**\n\n``` css\n/* matrix 默认值 */\ntransform: matrix(1, 0, 0, 1, 0, 0);\n\n/* translate */\ntransform: translate(x, y);\ntransform: matrix(0, 0, 0, 0, x, y);\n\n/* scale */\ntransform: scale(x, y);\ntransform: matrix(x, 0 * x, 0 * y, y, 0, 0);\n\n/* rotate */\nrotate: rotate(θ);\ntransform: matrix(cosθ, sinθ, -sinθ, cosθ, 0, 0);\n```\n\n**张鑫旭大神的博客[理解CSS3 transform中的Matrix](https://www.zhangxinxu.com/wordpress/2012/06/css3-transform-matrix-%E7%9F%A9%E9%98%B5/) 一文对此有详细的解释。**\n\n**但是需要注意的是，当 scale 和 rotate 一起使用的时候，两者的值需要相乘。**\n\n``` css\n/* scale 2 */\ntransform: scale(x, y);\nrotate: rotate(θ);\n\ntransform: matrix(cosθ * x, sinθ * x, -sinθ * y, cosθ * y, 0, 0);\n```\n\n### matrix 与 transfrom 转换函数。\n\n**根据 matrix 与 transfrom 之间的关系，可以提出一个函数来进行两者之间的转换。**\n\n``` js\nconst PI = Math.PI;\n\nfunction encodeMatrix({translateX = 0, translateY = 0, rotate=0, scaleX=1, scaleY=1} = {}) {\n    let rad = rotate * PI / 180;\n    let a = scaleX * Math.cos(rad);\n    let b = scaleX * Math.sin(rad);\n    let c = scaleY * -Math.sin(rad);\n    let d = scaleY * Math.cos(rad);\n    let e = translateX;\n    let f = translateY;\n\n    return [a,b,c,d,e,f]\n}\n\nfunction decodeMatrix([a = 1, b = 0, c = 0, d = 1, e = 0, f = 0] = []) {\n    let translateX = e;\n    let translateY = f;\n    let scaleX = Math.round(Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)));\n    let scaleY = Math.round(Math.sqrt(Math.pow(c, 2) + Math.pow(d, 2)));\n    let radC = Math.acos(a / scaleX);\n    let radS = Math.asin(b / scaleX);\n\n    let rad\n    if (b >= 0) {\n        rad = radC;\n    } else if (b < 0) {\n        rad = 2 * PI - radC;\n    }\n\n    let rotate = Math.round(rad * 180 / Math.PI);\n\n    return {translateX, translateY, rotate, scaleX, scaleY}\n}\n\nlet matrix = encodeMatrix({translateX: 30, translateY: 40, rotate: 45, scaleX: 2, scaleY: 3});\n//  [1.4142135623730951, 1.414213562373095, -2.1213203435596424, 2.121320343559643, 30, 40]\n\nlet transfrom = decodeMatrix([1.4142135623730951, 1.414213562373095, -2.1213203435596424, 2.121320343559643, 30, 40]);\n// {translateX: 30, translateY: 40, rotate: 45, scaleX: 2, scaleY: 3}\n```\n\n**上述函数在自己写的一个 [svg-editor](https://howgraceu.github.io/demo/svg/) 的例子中使用，但是在使用过程中发现如果缩放倍数不为整数时，可能会得到不精确的结果，导致最后结果偏差较大。**","tags":["matrix"]},{"title":"一灯笔记测试","url":"/yideng/2019/02/28/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","tags":["blogTest"]}]